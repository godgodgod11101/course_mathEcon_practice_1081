del g1, g2, g3, g4, g5
print("Lebron James' score in G1-G3:", james[0], james[1], james[2])
print("Lebron James' score in G1-G3:", james[0:3])    # 0~2
quit
reticulate::repl_python()
james = [23,18,15,51,36]
g1, g2, g3, g4, g5 = james
print("Lebron James' score in last 5 games:", g1, g2, g3, g4, g5)
del g1, g2, g3, g4, g5
print("Lebron James' score in G1-G3:", james[0], james[1], james[2])
quit
reticulate::repl_python()
print("Lebron James' score in G1-G3:", james[0:3])    # 0~2
print("Lebron James' score in G1-G3:", james[:3])
print("Lebron James' score in G1, G3, G5:", james[0:6:2])
print("Lebron James' score in G3-G5:", james[-3:])
quit
reticulate::repl_python()
print("Lebron James' score in G1-G3:", james[0:3])    # 0~2
print("Lebron James' score in G1-G3:", james[:3])
print("Lebron James' score in G1, G3, G5:", james[0:6:2])    # 0, 2, 4
print("Lebron James' score in G3-G5:", james[-3:])
quit
reticulate::repl_python()
james = [23,18,15,51,36]
print("highest: ", max(james))
print("lowest: ", min(james))
print("sum: ", sum(james))
print("mean: %.2f" % (sum(james)/len(james)))
quit
reticulate::repl_python()
james = [23,18,15,51,36]
print("maximum: ", max(james))
print("minimum: ", min(james))
print("sum: ", sum(james))
print("mean: %.2f" % (sum(james)/len(james)))
print("mean: %.1f" % (sum(james)/len(james)))
quit
reticulate::repl_python()
james = [23,18,15,51,36]
print("maximum: ", max(james))
print("minimum: ", min(james))
print("sum: ", sum(james))
print("mean: %.1f" % (sum(james)/len(james)))
quit
reticulate::repl_python()
james = [23,18,15,51,36]
print("Lebron James' score in G1-G3:", james[0:3])    # 0~2
print("Lebron James' score in G1-G3:", james[:3])
print("Lebron James' score in G1, G3, G5:", james[0:6:2])    # 0, 2, 4
print("Lebron James' score in G3-G5:", james[-3:])
quit
reticulate::repl_python()
james = [23,18,15,51,36]
print("maximum: ", max(james))
print("minimum: ", min(james))
print("sum: ", sum(james))
print("mean: %.1f" % (sum(james)/len(james)))
len(james)
len(james)
james = [23,18,15,51,36]
print(james)
james[0] = 33
print(james)
quit
reticulate::repl_python()
james = [23,18,15,51,36]
print(james)
james[0] = 33
print(james)
del james
car1 = ['BMW', 'BENZ', 'AUDI']
car2 = ['TOYOTA', 'NISSAN']
car1 += car2    # car1 = car1 + car2
print(car1)
car1 += car2    # car1 = car1 + car2
print(car1)
quit
reticulate::repl_python()
car1 = ['BMW', 'BENZ', 'AUDI']
car2 = ['TOYOTA', 'NISSAN']
car1 += car2    # car1 = car1 + car2
print(car1)
car = ['BMW', 'BENZ', 'AUDI', 'TOYOTA', 'NISSAN']
car
print(car)
del car[0:2]
print(car)
car1 = ['BMW', 'BENZ', 'AUDI']
car2 = ['TOYOTA', 'NISSAN']
car1 = ['BMW', 'BENZ', 'AUDI']
car2 = 'TOYOTA'
car3 = ['NISSAN', 'SUZUKI']
car1.append(car2)    #
print(car1)
car1.append(car2); print(car1)
car1 = ['BMW', 'BENZ', 'AUDI']
car2 = 'TOYOTA'
car3 = ['NISSAN', 'SUZUKI']
car1.append(car2); print(car1)
car1.append(car3); print(car1)
car1 = ['BMW', 'BENZ', 'AUDI']
car1.extend(car3); print(car3)    # 僅有元素產生
car1 = ['BMW', 'BENZ', 'AUDI']
car1.extend(car3); print(car3)    # 僅有元素產生
car1 = ['BMW', 'BENZ', 'AUDI']
car1.extend(car3); print(car1)    # 僅有元素產生
print(car1)
len(car3)
len(car2)
len(33)
len("你好")
car1 = ['BMW', 'BENZ', 'AUDI']
car2 = 'TOYOTA'
car3 = ['NISSAN', 'SUZUKI']
car1.append(car2); print(car1)
car1.append(car3); print(car1)    # 直接在串列末端新增元素
car1 = ['BMW', 'BENZ', 'AUDI']
car1.extend(car3); print(car1)    # 先將串列分解成一般元素，再一一加入
car1 = ['BMW', 'BENZ', 'AUDI', 'TOYOTA', 'NISSAN']
car1.pop()
print(car1)
car1.pop()
print(car1)
car1.pop(0)
print(car1)
car1 = ['BMW', 'BENZ', 'AUDI', 'TOYOTA', 'NISSAN']
# 不指定，刪最後一筆
car1.pop()    # 會回傳刪除的值
print(car1)
car1.pop(0)
print(car1)
quit
reticulate::repl_python()
car1 = ['BMW', 'BENZ', 'AUDI', 'TOYOTA', 'NISSAN']
# 不指定，刪最後一筆
car1.pop()    # 會回傳刪除的值
print(car1)
# 指定
car1.pop(0)
print(car1)
quit
reticulate::repl_python()
car = ['BMW', 'BENZ', 'AUDI', 'TOYOTA', 'NISSAN']
# 不指定，刪最後一筆
car.pop()    # 會回傳刪除的值
print(car1)
# 指定
car.pop(0)
print(car1)
car.index('NISSAN')
car = ['BMW', 'BENZ', 'AUDI', 'TOYOTA', 'NISSAN']
car.index('NISSAN')
car = ['BMW', 'BENZ', 'AUDI', 'TOYOTA', 'NISSAN']
car.index('AUDI')
del car[car.index('AUDI')]
car
car.index('AUDI')
print(car)
car = []
car.append('HONDA')
car = []
car.append('HONDA'); print(car)
car.append('FORD'); print(car)
car.append('VOLVO'); print(car)
car.insert(1, "NISSAN"); print(car)
car = ['BMW', 'NISSAN', 'BENZ', 'AUDI', 'NISSAN', 'TOYOTA', 'NISSAN']
car.remove("NISSAN")
print(car)    # 還有NISSAN
quit
reticulate::repl_python()
car = ['BMW', 'NISSAN', 'BENZ', 'AUDI', 'NISSAN', 'TOYOTA', 'NISSAN']
car.remove("NISSAN")    # 刪除指定值
print(car)    # 只刪除一個'NISSAN'
car.remove("NISSAN")    # 刪除指定值
car.remove("NISSAN")    # 刪除指定值
print(car)    # 只刪除第一個'NISSAN'
cars = ['BMW', 'BENZ', 'AUDI', 'NISSAN', 'VOLVO', 'TOYOTA', 'MAZDA']
del cars
quit
reticulate::repl_python()
car = ['BMW', 'BENZ', 'AUDI', 'NISSAN', 'VOLVO', 'TOYOTA', 'MAZDA']
print(car)
car.reverse()
print(car)
james = [23, 18, 15, 51, 36]
james = [23, 18, 15, 51, 36]
print(james)
james.sort()
print(james)
james.sort(reverse=True)
print(james)
quit
reticulate::repl_python()
car = ['BMW', 'BENZ', 'BMW', 'AUDI', 'NISSAN', 'VOLVO', 'BMW', 'TOYOTA', 'MAZDA']
car.count('BMW')
car = ['BMW', 'BENZ', 'AUDI', 'TOYOTA', 'NISSAN', 'AUDI']
car.index('AUDI')
del car[car.index('AUDI')]
print(car)
cars[4][1]
cars = ['BMW', 'BENZ', 'AUDI', 'NISSAN', ['VOLVO', 'FORD', 'MAZDA']]
cars[4][1]
cars[4][0]
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("C:\\Users\\User\\anaconda3\\envs\\pyClassEnv_ntpu\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("C:\\Users\\User\\anaconda3\\envs\\pyClassEnv_ntpu\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("C:\\Users\\User\\anaconda3\\envs\\pyClassEnv_ntpu\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("pyClassEnv_ntpu", required = T)
reticulate::repl_python()
str1.split(' ')
str1_list = str1.split(' ')
str1 = 'Taipei Medical University Healthcare'
str1_list = str1.split(' ')
str1.split(' ')
del str1_list
str2 = 'D:/java/Jre'
str2.split()
str2.split('/')
str1.split(' ')[0]
str1.split(' ')[-1]
url1.split('//')
url1 = 'https://24h.pchome.com.tw/sign/3c.htm'
url1.split('//')
url1.split('//')[1]
url1.split('//')[1].startswith('www')
print('no')
quit
reticulate::repl_python()
url1 = 'https://24h.pchome.com.tw/sign/3c.htm'
url1.split('//')[1]
url1.split('//')[1].startswith('www')    # 開頭是否為'www'
if url1.split('//')[1].startswith('www'):
print('yes')
else:
print('no')
quit
reticulate::repl_python()
if url1.split('//')[1].startswith('www') | url1.startswith('http'):
print('yes')
else:
print('no')
quit
reticulate::repl_python()
files = ['da1.c', 'da2.py', 'da3.py', 'da4.java']
pyScript = []
for i in files:
if i.endswith('py'):
py.append(i)
print(py)
quit
reticulate::repl_python()
path = ['D:', 'python', 'web.py']
connect = '*'
print(connect.join(path))
# or
print('*'.join(path))
print('\\'.join(path))    # 較常見
print('\'.join(path))    # 較常見
quit
reticulate::repl_python()
files = ['da1.c', 'da2.py', 'da3.py', 'da4.java']
pyScript = []
for i in files:
if i.endswith('py'):
pyScript.append(i)
print(pyScript)
aa.split()
aa = 'iron man'
aa.split()
b = aa.split(' ')
b
quit
reticulate::repl_python()
aa = 'iron man'
b = '/'.join(aa.split())
print(b)
fruits = ['apple', 'banana', 'pineapple']
fruits = ['apple', 'banana', 'pineapple']
fruit = input('add something? ')
if fruit in fruits:
print('already have')
else:
fruits.append(fruit)
print('add it! ', fruits)
fruit = input('add something? ')
watermellon
if fruit in fruits:
print('already have')
else:
fruits.append(fruit)
print('add it! ', fruits)
fruits = ['apple', 'banana', 'pineapple']
fruit = input('add something? ')
watermellon
if fruit in fruits:
print('already have')
else:
fruits.append(fruit)
print('add it! ', fruits)
fruit = input('add something? ')
watermellon
if fruit in fruits:
print('already have')
else:
fruits.append(fruit)
print('add it! ', fruits)
How I wonder what you are'''
quit
reticulate::repl_python()
lyrics = '''Twinkle Twinkle Little Star
Twinkle twinkle little star,
How I wonder what you are
Up above the world so high,
Like a diamond in the sky,
Twinkle twinkle little star,
How I wonder what you are'''
print(lyrics.strip())
print(lyrics.strip())
a = lyrics.strip()
print(a)
lyrics = '''Twinkle Twinkle Little Star,
Twinkle twinkle little star,
How I wonder what you are,
Up above the world so high,
Like a diamond in the sky,
Twinkle twinkle little star,
How I wonder what you are'''
lyrics.replace('\n', ' ')
lyrics.replace('\n', ' ').replace(',', '').split(' ')
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('Twinkle')
lyrics = '''Twinkle twinkle Little Star,
Twinkle twinkle little star,
How I wonder what you are,
Up above the world so high,
Like a diamond in the sky,
Twinkle twinkle little star,
How I wonder what you are'''
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('Twinkle')
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('Twinkle|twinkle')
quit
fruits = ['apple', 'banana', 'pineapple']
reticulate::repl_python()
print(xx.startswith('a'))
quit
reticulate::repl_python()
fruits = ['apple', 'banana', 'pineapple']
for xx in fruits:
print(xx.startswith('a'))
quit
reticulate::repl_python()
lyrics = '''Twinkle twinkle Little Star,
Twinkle twinkle little star,
How I wonder what you are,
Up above the world so high,
Like a diamond in the sky,
Twinkle twinkle little star,
How I wonder what you are'''
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('(Twinkle)|(twinkle)')
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('(T|t)winkle')
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('[Tt]winkle')
lyrics = '''Twinkle twinkle Little Star,
Twinkle twinkle little star,
How I wonder what you are,
Up above the world so high,
Like a diamond in the sky,
Twinkle twinkle little star,
How I wonder what you are'''
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('[Tt]winkle')
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('twinkle')
quit
reticulate::repl_python()
money = 50000
rate = 0.015
n = 5
for i in range(n):
money *= (1+rate)
print('%d' % (int(money)))
quit
reticulate::repl_python()
money = 50000
rate = 0.015
n = 5
for i in range(n):
money *= (1+rate)
print('%d: %d' % (i+1, int(money)))
lyrics.replace('\n', ' ').replace(',', '').count('twinkle')
lyrics.replace('\n', ' ').replace(',', '').count('[Tt]winkle')
n = 10
for i in range(n):
print('*', end='')    # 不換行
quit
n = 10
for i in range(n):
print('*', end='')    # 不換行
lyrics.replace('\n', ' ').replace(',', '').count('Twinkle')
quit
reticulate::repl_python()
lyrics = '''Twinkle twinkle Little Star,
Twinkle twinkle little star,
How I wonder what you are,
Up above the world so high,
Like a diamond in the sky,
Twinkle twinkle little star,
How I wonder what you are'''
lyrics.replace('\n', ' ').replace(',', '').split(' ').count('Twinkle')
lyrics.replace('\n', ' ').replace(',', '').split(' ')
quit
reticulate::repl_python()
n = 10
for i in range(n):
print('*', end='')    # 不換行
for i in range(0:n):
print('*', end='')
for i in range(n):
print('*', end='')    # 不換行
for i in range(0:n):
print('*', end='')
for i in range(0:n):
print('*', end='')
n = 10
for i in range(n):
print('*', end='')    # 不換行
for i in range(0:n):
print('*', end='')
for i in range(0:10):
print('*', end='')
quit
reticulate::repl_python()
n = 10
for i in range(n):
print('*', end='')    # 不換行
for i in range(0, n):
print('*', end='')
for i in range(0, n):
print('*', end='')
quit
reticulate::repl_python()
a = int(input('integer: '))
print(list(range(a+1)))
a = int(input('integer: '))
10
print(range(a+1))
print(list(range(a+1)))
quit
reticulate::repl_python()
a = int(input('integer: '))
print(range(a+1))
print(list(range(a+1)))    # 將range內容轉換成list，使易於理解
a = int(input('integer: '))
15
print(range(a+1))
print(list(range(a+1)))    # 將range內容轉換成list，使易於理解
print(total)
a = int(input('integer: '))
10
total = 0
for i in range(a):
total += i
print(total)
a = int(input('integer: '))
10
total = 0
for i in range(a+1):
total += i
print(total)
quit
reticulate::repl_python()
n = 10
for i in range(n):
print('*', end='')    # 不換行
print('\n')
for i in range(0, n):
print('*', end='')
quit
reticulate::repl_python()
n = 10
for i in range(n):
print('*', end='')    # 不換行
print('')
for i in range(0, n):
print('*', end='')
quit
reticulate::repl_python()
disease_name = ['a', 'b', 'c']
disease_count = ['63', '47', '55']
for i,j in zip(disease_name, disease_count):
print(i, j)
quit
reticulate::repl_python()
disease_name = ['a', 'b', 'c']
disease_count = ['63', '47', '155']
aaa = ['each day', 'each day', 'each month']
for i, j, k in zip(disease_name, disease_count):
print(i, j, k)
quit
reticulate::repl_python()
disease_name = ['a', 'b', 'c']
disease_count = ['63', '47', '155']
aaa = ['each day', 'each day', 'each month']
for i, j, k in zip(disease_name, disease_count, aaa):
print(i, j, k)
exit

if dict_business["公司所在地"][i][0:3] == "桃園市":
num_taoyuan += 1
num_taoyuan
num_taoyuan = 0
for i in range(len(dict_business["公司所在地"])):
if dict_business["公司所在地"][i][0:3] == "桃園市":
num_taoyuan += 1
num_taoyuan = 0
for i in range(len(dict_business["公司所在地"])):
if dict_business["公司所在地"][i][0:3] == "桃園市":
num_taoyuan += 1
num_taoyuan
num_taoyuan = 0
for i in range(len(dict_business["公司所在地"])):
if dict_business["公司所在地"][i][0:3] == "桃園市":
num_taoyuan += 1
num_taoyuan
num_taoyuan = 0
for i in range(len(dict_business["公司所在地"])):
if dict_business["公司所在地"][i][0:3] == "桃園市":
num_taoyuan += 1
num_taoyuan
dict_business.keys()
dict_business["資本額"]
dict_business["資本額"][0]
dict_business["資本額"][0] > 500000
num_largeCapital = 0
for i in range(len(dict_business["資本額"])):
if dict_business["資本額"][i] > 500000:
num_largeCapital += 1
num_largeCapital
quit
repl_python()
danceInfo.keys()
danceInfo
type(danceinfo)
type(danceInfo)
danceInfo[0]
len(danceInfo)
danceInfo[0]["showInfo"]
[len(danceInfo[i]["showInfo"]) > 1 for i in range(len(danceInfo))]
len([len(danceInfo[i]["showInfo"]) > 1 for i in range(len(danceInfo))])
danceInfo[10]["showInfo"]
quit
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
danceInfo[0]
danceInfo[0]["title"]
danceInfo[0]["showInfo"]
danceInfo[1]["showInfo"]
danceInfo[2]["showInfo"]
quit
repl_python()
title1
quit
repl_python()
danceInfo[0]["location"]
danceInfo[0]["showInfo"].keys()
danceInfo[0]["showInfo"]
danceInfo[0]["showInfo"][0]
danceInfo[0]["showInfo"][0]['location']
danceInfo[0]["showInfo"][0]["location"]
quit
repl_python()
local1
danceInfo[0]["showInfo"][0]["time"]
time1 = danceInfo[0]["showInfo"][0]["time"]
time1
danceInfo[0]["showInfo"]
danceInfo[0]["showInfo"][0]
quit
repl_python()
danceInfoList
quit
repl_python()
danceInfoList
len(danceInfoList)
danceInfo[0]
danceInfo[0]["showInfo"]
danceInfoList = []
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoList.append(danceInfo[i]["showInfo"][j])
danceInfoList
danceInfo[0]
danceInfo[0].items()
list(danceInfo[0].items())
danceInfoList = []
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoList.append(
{
"title": danceInfo[i]["title"],
"time": danceInfo[i]["showInfo"][j]["time"],
"location": danceInfo[i]["showInfo"][j]["location"]
}
)
danceInfoList
len(danceInfoList)
"【{title}】將於{time}在{location}演出".format(
title = "原音舞絢",
time = "2019/09/29 14:30:00",
location = "台北市中山南路21號，藍白建築1樓"
)
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoStr.append(
"【{title}】將於{time}在{location}演出".format(
title = danceInfo[i]["title"],
time = danceInfo[i]["showInfo"][j]["time"],
location = danceInfo[i]["showInfo"][j]["location"]
)
)
danceInfoStr = []
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoStr.append(
"【{title}】將於{time}在{location}演出".format(
title = danceInfo[i]["title"],
time = danceInfo[i]["showInfo"][j]["time"],
location = danceInfo[i]["showInfo"][j]["location"]
)
)
danceInfoStr[0]
danceInfoStr = []
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoStr.append(
"【{title}】將於{time}在{location}演出".format(
title = danceInfo[i]["title"],
time = danceInfo[i]["showInfo"][j]["time"],
location = danceInfo[i]["showInfo"][j]["location"][4:]
)
)
danceInfoStr[0]
danceInfoList[0]
danceInfoList = []
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoList.append(
{
"title": danceInfo[i]["title"],
"time": danceInfo[i]["showInfo"][j]["time"],
"location": danceInfo[i]["showInfo"][j]["location"][5:]
}
)
danceInfoList[5]
danceInfoStr = []
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoStr.append(
"【{title}】將於{time}在{location}演出".format(
title = danceInfo[i]["title"],
time = danceInfo[i]["showInfo"][j]["time"],
location = danceInfo[i]["showInfo"][j]["location"][5:]
)
)
danceInfoStr
danceInfoList = []
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoList.append(
{
"title": danceInfo[i]["title"],
"time": danceInfo[i]["showInfo"][j]["time"],
"location": danceInfo[i]["showInfo"][j]["location"]
}
)
danceInfoList
import re
quit
repl_python()
for i in range(len(danceInfo)):
for j in range(len(danceInfo[i]["showInfo"])):
danceInfoList.append(
{
"title": danceInfo[i]["title"],
"time": danceInfo[i]["showInfo"][j]["time"],
"location": danceInfo[i]["showInfo"][j]["location"]
}
)
danceInfoList
danceInfoList[0]
re.findall([^[0-9]], danceInfoList[0]["location"])
re.findall([^2], danceInfoList[0]["location"])
re.findall("[^[0-9]]", danceInfoList[0]["location"])
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
View(py$filelines)
View(py$filelines)
repl_python()
filelines
filelines.index("```")
filelines[26]
filelines.index("^```")
filelines.index("```")
filelines[32]
filelines[26]
quit
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
View(py$filelines)
repl_python()
listS[0]
listS[0]+1
[filelines[listS[i]+1: listE[i]+1] for i in range(len(listS))]
quit
View(py$filelines)
[dict_chunks["start"][0] + 1: dict_chunks["end"][0]]
dict_chunks["start"][0]
repl_python()
dict_chunks["start"][0]
dict_chunks["start"][0]+1
[dict_chunks["start"][0] + 1: dict_chunks["end"][0]]
[27:31]
[0:3]
range(27, 31)
list(range(27, 31))
quit
repl_python()
[filelines[list_pickCode[i]] for i in range(len(list_pickCode))]
python_code_list[0]
python_code_list[1]
python_code_list[2]
quit
repl_python()
python_code_list
python_code_list[0]
python_code_list[1]
python_code_list[2]
quit
repl_python()
f2=open("hw1-ans.py","w")
f2.writelines(python_code_list)
f2.close()
f2=open("hw1-ans.py","w")
f2.writelines(python_code_list)
f2.close()
quit
repl_python()
"\n".join(python_code_list)
quit
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
quit
repl_python()
danceInfo[0]
[danceInfo[i]["UID"] for i in range(danceInfo)]
danceInfo[0]["UID"]
[danceInfo[i]["UID"] for i in range(danceInfo)]
for i in range(danceInfo):
danceInfo[i]["UID"]
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
search_by_uid('5d93a403d083a331549834d6')
danceInfo[0]["showInfo"]
quit
repl_python()
search_by_uid('5d93a403d083a331549834d6')
uid = '5d93a403d083a331549834d6'
for i in range(len(danceInfo)):
if uid == danceInfo[i]["UID"]:
return danceInfo[i]["showInfo"])
break
else:
continue
quit
repl_python()
for i in range(len(danceInfo)):
if uid == danceInfo[i]["UID"]:
return danceInfo[i]["showInfo"]
break
else:
continue
danceInfo[0]["UID"]
quit
repl_python()
danceInfo[0]["showInfo"]
quit
repl_python()
search_by_uid('5d93a403d083a331549834d6')
quit
repl_python()
search_by_uid('5e56c184d083a37cd8cae25e')
danceInfo[0]["showInfo"]
quit
repl_python()
search_by_uid('5d93a403d083a331549834d6')
search_by_uid('5d93a403d083a331549834d6')[1]
search_by_uid('5d93a403d083a331549834d6')[0]
search_by_uid('5d93a403d083a331549834d6').append()
updated_result = search_by_uid('5d93a403d083a331549834d6').copy()
updated_result.append({'time': '2019/10/30 15:00:00', 'location': '新北市三峽區大學路151號', 'locationName': '國立臺北大學'})
updated_result
search_by_uid('5d93a403d083a331549834d6')
updated_result
updated_result = search_by_uid('5d93a403d083a331549834d6').copy()
updated_result.append(
{'time': '2019/10/30 15:00:00', 'location': '新北市三峽區大學路151號', 'locationName': '國立臺北大學'}
)
updated_result
search_by_uid('5d93a403d083a331549834d6')
quit
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
range(1, 3)
range(1, 3)[0]
len(range(1, 3))
len(range(1, 3))+1
list(range(1, 3))
quit
repl_python()
matrix_get(M, range(1,3), range(2,5))
quit
repl_python()
matrix_get(M, range(1,3), range(2,5))
matrix_get(M, range(1,4), range(2,5))
matrix_get(M, range(0,3), range(2,5))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
len(danceInfo)
danceInfo[0].keys()
[danceInfo[i]['UID'] for i in range(len(danceInfo))]
uid = '5f284353d083a389c4216111'
del uid
quit
repl_python()
allUIDs.index("5f284353d083a389c4216111")
quit
repl_python()
search_by_uidT('5f284353d083a389c4216111')
search_by_uidT('5d93a403d083a331549834d6')
search_by_uidT('5d93a403d083a331549834d6')
quit
repl_python()
search_by_uidT('5d93a403d083a331549834d6')
quit
repl_python()
search_by_uidT("5d35ec95d083a398fcdc5e14")
quit
repl_python()
search_by_uidT('5c9a1560d083a30290d1b36f')
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
search_by_uidT('5c9a1560d083a30290d1b36f')
search_by_uidT('5c9a1560d083a30290d1b36f').append({'time': '2019/10/30 15:00:00', 'location': '新北市三峽區大學路151號', 'locationName': '國立臺北大學'})
danceInfo[0]["showInfo"]
quit
repl_python()
updated_result = search_by_uid('5d93a403d083a331549834d6').copy()
updated_result.append(
{'time': '2019/10/30 15:00:00', 'location': '新北市三峽區大學路151號', 'locationName': '國立臺北大學'}
)
updated_result = search_by_uid('5c9a1560d083a30290d1b36f').copy()
updated_result.append(
{'time': '2019/10/30 15:00:00', 'location': '新北市三峽區大學路151號', 'locationName': '國立臺北大學'}
)
updated_result = search_by_uidT('5c9a1560d083a30290d1b36f').copy()
updated_result.append(
{'time': '2019/10/30 15:00:00', 'location': '新北市三峽區大學路151號', 'locationName': '國立臺北大學'}
)
danceInfo[0]["showInfo"]
danceInfo[0]["showInfo"]
quit
repl_python()
search_by_uidT('5c9a1560d083a30290d1b36f').append(
{'time': '2019/10/30 15:00:00', 'location': '新北市三峽區大學路151號', 'locationName': '國立臺北大學'}
)
danceInfo[0]["showInfo"]
quit
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
del samSp1
quit
repl_python()
eventSp
quit
repl_python()
repl_python()
eventSp
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
[event.issubset(omega1) for event in eventSp]
exit
repl_python()
prob = 0.5
omega1
list(omega1)[0]
list(omega1)[0][0]
exit
repl_python()
len(omega1)
exit
repl_python()
omega1Prob[0]
quit

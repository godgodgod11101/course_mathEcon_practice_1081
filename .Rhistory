knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
danceInfo[77]
danceInfo[78]
len(danceInfo[77]['showInfo'])
danceInfo[78]
danceInfo[72]
quit
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/anaconda3/envs/m-team/bin/python",
required = T)
use_condaenv("m-team", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
quit
repl_python()
danceInfo[76]
danceInfo[77]
len(danceInfo)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
danceInfo[42]
quit
repl_python()
danceInfo[42]['showInfo']
danceInfo_42['showInfo'].append(
{'time': '2020/09/09 14:30:00', 'location': '桃園市桃園區三民路一段131號', 'locationName': '三民運動公園'}
)
danceInfo[42]['showInfo']
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
reticulate::repl_python()
def add_fun(x, y):
return x+y
def add_fun(x, y):
return x+y
def add_fun(x, y):
return x+y
quit
reticulate::repl_python()
import requests
response = requests.get("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=3")
danceInfo=response.json()
import requests
response = requests.get("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=3")
danceInfo = response.json()
len(danceInfo[i]['showInfo'])
for i in range(len(danceInfo)):
len(danceInfo[i]['showInfo'])
list_howManyPlays = []
for i in range(len(danceInfo)):
list_howManyPlays.append(
len(danceInfo[i]['showInfo'])
)
list_howManyPlays
list_howManyPlays = []
for i in range(len(danceInfo)):
list_howManyPlays.append(
len(danceInfo[i]['showInfo'])
)
list_howManyPlays
len(list_howManyPlays)
int_totalPlay = 0
for i in range(len(danceInfo)):
int_totalPlay = int_totalPlay + danceInfo[i]['showInfo']
int_totalPlay
sum(list_howManyPlays)
import requests
response = requests.get("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=3")
danceInfo = response.json()
list_howManyPlays = []
for i in range(len(danceInfo)):
list_howManyPlays.append(
len(danceInfo[i]['showInfo'])
)
list_howManyPlays
sum(list_howManyPlays)
int_totalPlay = 0
for i in range(len(danceInfo)):
int_totalPlay = int_totalPlay + danceInfo[i]['showInfo']
int_totalPlay
int_totalPlay = 0
for i in range(len(danceInfo)):
int_totalPlay = int_totalPlay + len(danceInfo[i]['showInfo'])
int_totalPlay
quit
py$danceInfo
View(py$danceInfo)
View(py$danceInfo)
a = c(1, 3, 5)
a = c(1, 3, 5)
reticulate::repl_python()
from requests import get
triVoucher_raw = get('https://opendata.culture.tw/upload/dataSource/2020-07-29/3b466a87-e1f1-4afa-9641-8060c8d2549d/606008c485fdb7182cc15c45a7d372ba.CSV')
triVoucher_raw
triVoucher_raw.json()
from requests import get
traditional_raw = get('https://data.boch.gov.tw/data/opendata/v2/assetsCase/4.1.json')
traditional_raw
traditional_raw.json()
from requests import get
traditionalPlay_raw = get('https://data.boch.gov.tw/data/opendata/v2/assetsCase/4.1.json')
traditionalPlay = traditionalPlay_raw.json()
quit
View(py$traditionalPlay)
reticulate::repl_python()
int_totalPlay = 0
for i in range(len(danceInfo)):
int_totalPlay = int_totalPlay + len(danceInfo[i]['showInfo'])
int_totalPlay
quit
n
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:/anaconda3/envs/classEnvironment/python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
i
j
quit
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:/anaconda3/envs/classEnvironment/python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\anaconda3\envs\classEnvironment\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D://anaconda3//envs//classEnvironment//python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
repl_python()
del()
dir()
quit
repl_python()
from requests import get
myFile = get('https://raw.githubusercontent.com/tpemartin/course-108-1-inclass-datavisualization/master/作品展示/homework2/homework2_008.RMD')
contentList = myFile.content.decode("utf-8").split("\n")
contentList
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
# 在名為classEnvironment的沙盒下寫python
use_condaenv("classEnvironment", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
Sys.setenv(RETICULATE_PYTHON = "D:\\anaconda3\\envs\\classEnvironment\\python.exe")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
library(reticulate)
repl_python()
quit
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
py_config()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
# 設定要使用的python（可能因要使用不同版本的python而路徑有所改變）
use_python("D:\\anaconda3\\envs\\classEnvironment\\python.exe", required = T)
